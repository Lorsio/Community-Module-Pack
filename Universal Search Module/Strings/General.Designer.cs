//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Universal_Search_Module.Strings {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class General {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal General() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Universal_Search_Module.Strings.General", typeof(General).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Landmark Search.
        /// </summary>
        internal static string Button_Search {
            get {
                return ResourceManager.GetString("Button_Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Copied waypoint to clipboard!.
        /// </summary>
        internal static string SearchResultItem_Copied {
            get {
                return ResourceManager.GetString("SearchResultItem_Copied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to copy waypoint to clipboard. Try again..
        /// </summary>
        internal static string SearchResultItem_Failed {
            get {
                return ResourceManager.GetString("SearchResultItem_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Closest Waypoint.
        /// </summary>
        internal static string SearchWindow_ClosestWaypoint {
            get {
                return ResourceManager.GetString("SearchWindow_ClosestWaypoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Shift + Enter: Copy closest waypoint to clipboard..
        /// </summary>
        internal static string SearchWindow_ClosestWaypoint2 {
            get {
                return ResourceManager.GetString("SearchWindow_ClosestWaypoint2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enter: Copy landmark to clipboard..
        /// </summary>
        internal static string SearchWindow_Copy {
            get {
                return ResourceManager.GetString("SearchWindow_Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Name Loading....
        /// </summary>
        internal static string SearchWindow_NameLoading {
            get {
                return ResourceManager.GetString("SearchWindow_NameLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à none found.
        /// </summary>
        internal static string SearchWindow_NoneFound {
            get {
                return ResourceManager.GetString("SearchWindow_NoneFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No Results.
        /// </summary>
        internal static string SearchWindow_NoResults {
            get {
                return ResourceManager.GetString("SearchWindow_NoResults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Search.
        /// </summary>
        internal static string SearchWindow_Search {
            get {
                return ResourceManager.GetString("SearchWindow_Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Landmark Search.
        /// </summary>
        internal static string SearchWindow_Title {
            get {
                return ResourceManager.GetString("SearchWindow_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Loading floor {0}....
        /// </summary>
        internal static string Settings_Floor {
            get {
                return ResourceManager.GetString("Settings_Floor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hide Window After Selection.
        /// </summary>
        internal static string Settings_HideWindow {
            get {
                return ResourceManager.GetString("Settings_HideWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If checked, the landmark search window will automatically hide after a landmark is selected from the results..
        /// </summary>
        internal static string Settings_HideWindowHover {
            get {
                return ResourceManager.GetString("Settings_HideWindowHover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Show Notification When Landmark is Copied.
        /// </summary>
        internal static string Settings_ShowNotification {
            get {
                return ResourceManager.GetString("Settings_ShowNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If checked, a notification will be displayed in the center of the screen confirming the landmark was copied..
        /// </summary>
        internal static string Settings_ShowNotificationHover {
            get {
                return ResourceManager.GetString("Settings_ShowNotificationHover", resourceCulture);
            }
        }
    }
}
